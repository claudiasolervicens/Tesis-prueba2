{
    "collab_server" : "",
    "contents" : "library(dplyr)\nlibrary(highcharter)\nlibrary(readxl)\nlibrary(d3wordcloud)\n\n\npacman::p_load(NLP,tm,SnowballC,readxl,d3wordcloud,RColorBrewer,dplyr)\n\n#saveRDS(DataMaestra,\"07012018DataMaestra.rds\")\nreadRDS(\"07012018DataMaestra.rds\")\n\nDataMaestra%>%\n  group_by(Ano,lda_10)%>%\n  summarise(abs_tot=n())->DataGraph;\n\n\nhchart(DataGraph,\"column\",hcaes(x=Ano,y=abs_tot, group=lda_10))%>%\n  hc_title(text=\"Publicaciones\")%>%\n  hc_credits(text=\"Facultad de Medicina Universidad de Chile\",href=\"http://www.medicina.uchile.cl\", enabled=TRUE)%>%\n  hc_xAxis(title = list(text = \"Año\"))%>%hc_yAxis(title = list(text = \"N° de Artículos\"))%>%\n  hc_add_theme(hc_theme_gridlight())%>%hc_plotOptions(column=list(\n    stacking=\"normal\"\n  ))\n\n\neval(parse(text=\"1+3\"))\n\n\nhighchart()%>%\n  hc_chart(type =\"column\")%>%\n  hc_xAxis(categories = DataGraph$Ano)%>%\n  hc_add_series(data=DataGraph$abs_tot,type=\"column\")%>%\n  hc_title(text=\"Publicaciones\")%>%\n  hc_credits(text=\"Facultad de Medicina Universidad de Chile\",href=\"http://www.medicina.uchile.cl\", enabled=TRUE)%>%\n  hc_xAxis(title = list(text = \"Año\"))%>%hc_yAxis(title = list(text = \"N° de Artículos\"))%>%\n  hc_add_theme(hc_theme_gridlight())%>%hc_plotOptions(column=list(\n    stacking=\"normal\"\n  ))\n\n\nKeyword<-function (StringVector)\n{\n  StringVector<-Corpus(VectorSource(StringVector))\n  \n  toSpace <- content_transformer(function(x, pattern) { return (gsub(pattern, \" \", x))})\n  \n  vector_cleaning<-c(\"!\",\"#\",\"$\",\"%\",\"&\",\"/\", \"•\", \"‘\", \"’\", \"-\",\"<\", \">\")\n  \n  for (i in 1:length(vector_cleaning))\n  {\n    StringVector <- tm_map(StringVector, toSpace, vector_cleaning[i])\n  }\n  \n  \n  #remover signos de  puntuación\n  StringVector <- tm_map(StringVector, removePunctuation)\n  \n  #remover número\n  StringVector <- tm_map(StringVector, removeNumbers)\n  \n  StringVector <-tm_map(StringVector,content_transformer(tolower))\n  \n  #cargar la lista de stopwords\n  stopwords <- c(stopwords(kind = \"english\"))\n  \n  #remover stopwords\n  StringVector <- tm_map(StringVector, removeWords, stopwords)\n  \n  #remover whitespace\n  StringVector <- tm_map(StringVector, stripWhitespace)\n  \n  #cargar la lista de generic terms\n  genericterms <- readLines(\"genericterms.txt\")\n  \n  #remover generic terms\n  StringVector <- tm_map(StringVector, removeWords, genericterms)\n  \n  \n  dtm <- DocumentTermMatrix(StringVector)\n  \n  #agrupar sumando por columnas\n  freq <- colSums(as.matrix(dtm))\n  \n  #el largo debe ser igual a total de términos\n  length(freq)-ncol(dtm)==0\n  \n  #ordenar por frecuencia (descendiente)\n  ord <- order(freq,decreasing=TRUE)\n  \n  #Enlistar los términos por frecuencia\n  data.frame(freq[ord])\n  \n}\n\n\nNombre_Frecuencia<-Keyword(DataMaestra$Abstract)\nNombre_Frecuencia$palabras<-row.names(Nombre_Frecuencia)\nNombre_Frecuencia%>%top_n(300,wt=freq.ord.)->graficar_palabras\n\n\n\nsubset(DataMaestra, lda_10 %in% \"2\")\n\nd3wordcloud(graficar_palabras$palabras, graficar_palabras$freq.ord.)\n\n",
    "created" : 1515351142780.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1180440179",
    "id" : "9DFC82FE",
    "lastKnownWriteTime" : 30962681237012597,
    "last_content_update" : 1515370577570,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}